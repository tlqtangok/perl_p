# set -e
# to bld grpc 
# $ git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc
#$ cd grpc
#$ git submodule update --init
#export prefix=`pwd`/out
#$ make -e

# to run 
# 1. source env.env 
# 2. cd redis && ./redis-server ./redis.conf
# 3. enable log?
# 4. ... 

# export NEW_ROOT=XXX
# cp -r env.env CMakeLists.txt gpuserver_verify grpc_bld_out grpc_demo protobuf_bld_out redis $NEW_ROOT
# cd src/gRPC && protoc --cpp_out=. task.proto

# /usr/bgisoft/pipelines/nifty_clinic_gpu/database      => reference 
# /usr/bgisoft/pipelines/nifty_clinic_gpu/Attchment     => sai2sam

# perl /mnt/jd/t/perl_p/filter_src_fn.PL fn_all.txt c cc cpp cu cuh cxx h hpp inc > 1.linux.txt


### need edit ROOT_xxx/lib/pkgconfig/*.pc 's prefix ### !!!
#  mkdir -p /usr/bgisoft/phoenix/logs

# cd ../redis && ./redis-server ./redis.conf

# redis-cli json.set config . "{\"nifty_aln\":{\"alnParameter\":\"-t1 -o0 -e10 -i0 -L -l12 -k2\",\"alnThread\":3,\"attchmentPath\":\"\\/usr\\/bgisoft\\/pipelines\\/nifty_clinic_gpu\\/database\\/Attchment\",\"dataControlStep\":30,\"dataSlowLimit\":120,\"dataSpeedUp\":60,\"outputSam\":0,\"processorThread\":6,\"readerThread\":2,\"referenceIndex\":\"\\/usr\\/bgisoft\\/pipelines\\/nifty_clinic_gpu\\/database\\/index\\/reference.fa\",\"sai2samThread\":27,\"seqsNumber\":1000000}}"


# to bld protobuf 
#./configure --prefix=`pwd`/bld

# after build, you may see grpc/bin protoc


#make install 
export curdir=`pwd`
export ROOT_GRPC=`pwd`/grpc_bld_out
export ROOT_PB=`pwd`/protobuf_bld_out
export ZLOG_CONF_PATH=`pwd`/zlog/zlog.conf


export openssl_pkgconfig=/mnt/jd/t/ana/lib/pkgconfig	# by locate openssl.pc to get its dir
export PATH=$ROOT_PB/bin:$ROOT_GRPC/bin:$PATH
export PKG_CONFIG_PATH=$ROOT_PB/lib/pkgconfig:$ROOT_GRPC/lib/pkgconfig:$openssl_pkgconfig:$PKG_CONFIG_PATH   # NEVER add anything more here !!!
export LD_LIBRARY_PATH=$ROOT_PB/lib:$ROOT_GRPC/lib:$LD_LIBRARY_PATH




# to run 
#protoc --cpp_out=. --java_out=. --python_out=. test.proto
#protoc --cpp_out=. test.proto
#c++ -std=c++11 main.cpp test.pb.cc -o main_test_proto.exe `pkg-config --cflags --libs protobuf`

#./main_test_proto.exe 


